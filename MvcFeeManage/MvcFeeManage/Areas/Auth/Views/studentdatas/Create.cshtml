@model MvcFeeManage.Areas.Auth.Models.tblstudentdata
@using MvcFeeManage.Areas.Auth.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Auth/Views/Shared/Layout.cshtml";
    dbcontext db = new dbcontext();
    //Course ca = new Course();
    var stucourse = db.StudentCourse.ToList();


}

<h2>Create</h2>

@using (Html.BeginForm("Create", "studentdatas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DOB", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.gender,
                    new SelectList(Enum.GetValues(typeof(MvcFeeManage.Areas.Auth.Models.gender))),
                    "Select Gender",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Father Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fathername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fathername, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Phone", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ffather Phone", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fatherphn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fatherphn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Language", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.language, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.language, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Board", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.type,
                    new SelectList(Enum.GetValues(typeof(MvcFeeManage.Areas.Auth.Models.board))),
                    "Select Board",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.board, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qualification", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.qualification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.qualification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Prior Coaching", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Yes @Html.RadioButton("coaching", "Yes")
                No @Html.RadioButton("coaching", "No")
                
                @Html.ValidationMessageFor(model => model.coaching, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Institute Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.institutename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.institutename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.type,
                    new SelectList(Enum.GetValues(typeof(MvcFeeManage.Areas.Auth.Models.type))),
                    "Select Type",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Reffered By", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.refferedby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.refferedby, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Course", htmlAttributes: new { @class = "control-label col-md-2", @onchange = "Courses()" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })       
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Room", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoomId", null, htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Addmission Fees", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="addmission" type="text" name="addmission" class="form-control" />

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Discount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Date Of Joining", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="joining" type="date" name="joining" class="form-control" />
                @*@Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.refferedby, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Course EndDate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="enddate" type="date" name="enddate" class="form-control" />
                @Html.ValidationMessageFor(model => model.refferedby, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Student Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="file" type="file" title="search image" class="form-control" name="file" />
                @Html.Label("150px X 150px", htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-danger" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })

            </div>
        </div>
    </div>
}
<script src="https://code.jquery.com/jquery-1.10.2.js"
        integrity="sha256-it5nQKHTz+34HijZJQkpNBIHsjpV8b6QzMJs9tmOBSo="
        crossorigin="anonymous"></script>

<script>
    function Courses() {
        debugger;
        var stateId = $("#cityDropDown").val();

        $.ajax
        ({
            url: '/studentdatas/Fee',
            type: 'POST',
            datatype: 'application/json',
            contentType: 'application/json',
            data: JSON.stringify({
                stateId: +stateId
            }),
            success: function (result) {
                debugger;
                
                $.each($.parseJSON(result), function (i, city) {
                    debugger;
                    var a = city.id;
                    $("#addmission").val(city.Fees)
                })

            },
            error: function () {
                alert("Whooaaa! Something went wrong..")
            },
        });
    }
</script>
<div>

</div>
